/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as LoginImport } from './routes/login'
import { Route as DashboardIndexImport } from './routes/dashboard/index'
import { Route as DashboardReactFlowImport } from './routes/dashboard/react-flow'
import { Route as DashboardLayoutImport } from './routes/dashboard/layout'
import { Route as DashboardDataGridTwoImport } from './routes/dashboard/data-grid-two'
import { Route as DashboardDataGridOneImport } from './routes/dashboard/data-grid-one'

// Create/Update Routes

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/dashboard/',
  path: '/dashboard/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardReactFlowRoute = DashboardReactFlowImport.update({
  id: '/dashboard/react-flow',
  path: '/dashboard/react-flow',
  getParentRoute: () => rootRoute,
} as any)

const DashboardLayoutRoute = DashboardLayoutImport.update({
  id: '/dashboard/layout',
  path: '/dashboard/layout',
  getParentRoute: () => rootRoute,
} as any)

const DashboardDataGridTwoRoute = DashboardDataGridTwoImport.update({
  id: '/dashboard/data-grid-two',
  path: '/dashboard/data-grid-two',
  getParentRoute: () => rootRoute,
} as any)

const DashboardDataGridOneRoute = DashboardDataGridOneImport.update({
  id: '/dashboard/data-grid-one',
  path: '/dashboard/data-grid-one',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/data-grid-one': {
      id: '/dashboard/data-grid-one'
      path: '/dashboard/data-grid-one'
      fullPath: '/dashboard/data-grid-one'
      preLoaderRoute: typeof DashboardDataGridOneImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/data-grid-two': {
      id: '/dashboard/data-grid-two'
      path: '/dashboard/data-grid-two'
      fullPath: '/dashboard/data-grid-two'
      preLoaderRoute: typeof DashboardDataGridTwoImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/layout': {
      id: '/dashboard/layout'
      path: '/dashboard/layout'
      fullPath: '/dashboard/layout'
      preLoaderRoute: typeof DashboardLayoutImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/react-flow': {
      id: '/dashboard/react-flow'
      path: '/dashboard/react-flow'
      fullPath: '/dashboard/react-flow'
      preLoaderRoute: typeof DashboardReactFlowImport
      parentRoute: typeof rootRoute
    }
    '/dashboard/': {
      id: '/dashboard/'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/login': typeof LoginRoute
  '/dashboard/data-grid-one': typeof DashboardDataGridOneRoute
  '/dashboard/data-grid-two': typeof DashboardDataGridTwoRoute
  '/dashboard/layout': typeof DashboardLayoutRoute
  '/dashboard/react-flow': typeof DashboardReactFlowRoute
  '/dashboard': typeof DashboardIndexRoute
}

export interface FileRoutesByTo {
  '/login': typeof LoginRoute
  '/dashboard/data-grid-one': typeof DashboardDataGridOneRoute
  '/dashboard/data-grid-two': typeof DashboardDataGridTwoRoute
  '/dashboard/layout': typeof DashboardLayoutRoute
  '/dashboard/react-flow': typeof DashboardReactFlowRoute
  '/dashboard': typeof DashboardIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/login': typeof LoginRoute
  '/dashboard/data-grid-one': typeof DashboardDataGridOneRoute
  '/dashboard/data-grid-two': typeof DashboardDataGridTwoRoute
  '/dashboard/layout': typeof DashboardLayoutRoute
  '/dashboard/react-flow': typeof DashboardReactFlowRoute
  '/dashboard/': typeof DashboardIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/login'
    | '/dashboard/data-grid-one'
    | '/dashboard/data-grid-two'
    | '/dashboard/layout'
    | '/dashboard/react-flow'
    | '/dashboard'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/login'
    | '/dashboard/data-grid-one'
    | '/dashboard/data-grid-two'
    | '/dashboard/layout'
    | '/dashboard/react-flow'
    | '/dashboard'
  id:
    | '__root__'
    | '/login'
    | '/dashboard/data-grid-one'
    | '/dashboard/data-grid-two'
    | '/dashboard/layout'
    | '/dashboard/react-flow'
    | '/dashboard/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  LoginRoute: typeof LoginRoute
  DashboardDataGridOneRoute: typeof DashboardDataGridOneRoute
  DashboardDataGridTwoRoute: typeof DashboardDataGridTwoRoute
  DashboardLayoutRoute: typeof DashboardLayoutRoute
  DashboardReactFlowRoute: typeof DashboardReactFlowRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  LoginRoute: LoginRoute,
  DashboardDataGridOneRoute: DashboardDataGridOneRoute,
  DashboardDataGridTwoRoute: DashboardDataGridTwoRoute,
  DashboardLayoutRoute: DashboardLayoutRoute,
  DashboardReactFlowRoute: DashboardReactFlowRoute,
  DashboardIndexRoute: DashboardIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/login",
        "/dashboard/data-grid-one",
        "/dashboard/data-grid-two",
        "/dashboard/layout",
        "/dashboard/react-flow",
        "/dashboard/"
      ]
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/dashboard/data-grid-one": {
      "filePath": "dashboard/data-grid-one.tsx"
    },
    "/dashboard/data-grid-two": {
      "filePath": "dashboard/data-grid-two.tsx"
    },
    "/dashboard/layout": {
      "filePath": "dashboard/layout.tsx"
    },
    "/dashboard/react-flow": {
      "filePath": "dashboard/react-flow.tsx"
    },
    "/dashboard/": {
      "filePath": "dashboard/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
